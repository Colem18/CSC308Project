@using eventsApp.Data;

@page "/pickEventType"
@inject NavigationManager NavManager

@inject Event _event;

<div class="flex-container">
    <h3>
        Select the type of event you want to create.
    </h3>
    <div class="flex-container row">
        <button class="btn roma" @onclick="religion_nextPage">
            RELIGIOUS
        </button>
        <button class="btn roma" @onclick="sport_nextPage">
            SPORT
        </button>

    </div>
    <div class="flex-container row">
        @*<label class="roma-checkbox">
            <input type="hidden" name="romaBtn" value="False" />
            <input class="roma-checkbox-input" name="romaBtn" value="True" type="checkbox">
            <span class="roma-checkbox-text">ART & HISTORY</span>
        </label>*@
        <button class="btn roma" @onclick="art_nextPage">
            ART & HISTORY
        </button>
        <button class="btn roma" @onclick="music_nextPage">
            MUSIC
        </button>
    </div>
    @*<div class="flex-container row">
        <button class="btn continue" @onclick="nextPage">
            CONTINUE
        </button>

    </div>*@

    @*<div class="horizontalDiv">
            <RadzenButton Style="border: 2px solid #066274; background-color: white; color: #066274; width: 25%; padding: 5%; justify-content: center">
                Type 3
            </RadzenButton>
            <RadzenButton Style="border: 2px solid #066274; background-color: white; color: #066274; width: 25%; padding: 5%; justify-content: center">
                Type 4
            </RadzenButton>
        </div>*@
</div>

    @code {
        Event TempEvent;

        private void religion_nextPage()
        {
            TempEvent = _event;
            TempEvent.type = 1;
            Console.WriteLine($"Event type: {TempEvent.type}");
            NavManager.NavigateTo("/eventStartDateAndTimePage");
            
        }
        private void sport_nextPage()
        {
            TempEvent = _event;
            TempEvent.type = 2;
            NavManager.NavigateTo("/eventStartDateAndTimePage");
            Console.WriteLine($"Event type: {TempEvent.type}");
        }
        private void art_nextPage()
        {
            TempEvent = _event;
            TempEvent.type = 3;
            NavManager.NavigateTo("/eventStartDateAndTimePage");
            Console.WriteLine($"Event type: {TempEvent.type}");
        }
        private void music_nextPage()
        {
            TempEvent = _event;
            TempEvent.type = 4;
            NavManager.NavigateTo("/eventStartDateAndTimePage");
            Console.WriteLine($"Event type: {TempEvent.type}");
        }

        }
