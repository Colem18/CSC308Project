@page "/home"

@using Radzen
@using Newtonsoft.Json;
@using Data;
@inject NavigationManager NavManager;
@inject Data.HttpRestService _httprestservice;

<h1 style="text-align:center;">Welcome to Roma Events!</h1>

<p><em>@loading</em></p>

@if (EventList == null)
{
        Console.WriteLine(EventList.ToString);
}
else
{
    @foreach (var Event in EventList)
    {
        <EventCard eventName="@Event.name" eventDateTime="@Event.datetime" eventAddress="@Event.address" eventDescription="@Event.description"
                   eventImageURL="@Event.url" eventType="@Event.type"></EventCard>
    }
}


@code {
    string loading = "Loading...";
    private List<Event> EventList = new List<Event>();
    public List<Event> Items = new List<Event>();
    protected override async Task OnInitializedAsync()
    {
        Task<List<Event>> LIST = GetEventsAsync();
        List<Event> EventList = await LIST;
        loading = "Sucessfully Loaded";
    }
    /**protected override async Task OnInitializedAsync()
    {
        string output = "[\n  {\n    \"eventName\": \"Shari Vari\",\n    \"eventDateTime\": \"2022-10-15T00:30:50\",\n    \"eventAddress\": \"Via de' Nari, 14, 00186 Roma RM\",\n    \"eventDescription\": \"Lorum Ipsum Dolor\",\n    \"eventImageURL\": \"https://i.imgur.com/ditrT1U.png\",\n    \"eventType\": 2\n  },\n  {\n    \"eventName\": \"Cash Club\",\n    \"eventDateTime\": \"2022-10-10T07:30:50\",\n    \"eventAddress\": \"Via Agostino Bertani, 20 00186 Roma RM\",\n    \"eventDescription\": \"Lorup Ipsum My Penis\",\n    \"eventImageURL\": \"https://i.imgur.com/ditrT1U.png\",\n    \"eventType\": 1\n  }\n]";
        EventList = JsonConvert.DeserializeObject<List<Event>>(output);
    } **/
    public async Task<List<Event>> GetEventsAsync()
    {
        Uri uri = new Uri(string.Format("https://romaeventfunction.azurewebsites.net/api/event", string.Empty));
        //Console.WriteLine(uri);
        try
        {
            HttpResponseMessage response = await _httprestservice._client.GetAsync(uri);
            //Console.WriteLine(response.IsSuccessStatusCode);
            if (response.IsSuccessStatusCode)
            {
                string content = await response.Content.ReadAsStringAsync();
                Console.WriteLine(content);
                //Items = JsonSerializer.Deserialize(content,_httprestservice._serializerOptions);
                Items = JsonConvert.DeserializeObject<List<Event>>(content);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(@"\tERROR {0}", ex.Message);
        }

        return Items;
    }
}

