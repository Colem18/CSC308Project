@page "/home"

@using Radzen
@using Newtonsoft.Json;
@using Microsoft.Maui.Graphics;
@using eventsApp.Data;

@inject NavigationManager NavManager;
@inject HttpRestService _httprestservice;

<div class="flex-container">
    <h1 style="text-align:center;">Welcome to Roma Events!</h1>

    <p><em>@loading</em></p>
    <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />

    @if (EventList == null)
    {
        Console.WriteLine(EventList.ToString());
    }
    else
    {
        @foreach (var Event in EventList)
        {
            Console.WriteLine(Event.id);
            <EventCard eventName="@Event.name" eventDateTime="@Event.datetime" eventAddress="@Event.address" eventDescription="@Event.description"
                       eventImageURL="@Event.url" eventType="@Event.type" eventId="@Event.id"></EventCard>
        }
    }


</div>



@code {
    string loading = "Loading...";
    private List<Event> EventList = new List<Event>();
    public List<Event> Items = new List<Event>();


    public int Test1()
    {
        return 2;
    }
    protected override async Task OnInitializedAsync()
    {
        EventLoader _eventLoader = new EventLoader();
        Task<List<Event>> LIST = _eventLoader.GetEventsAsync();
        EventList = await LIST;
        loading = "Sucessfully Loaded";
        //await InvokeAsync(() => StateHasChanged());
    }

    /**protected override async Task OnInitializedAsync()
    {
        string output = "[\n  {\n    \"eventName\": \"Shari Vari\",\n    \"eventDateTime\": \"2022-10-15T00:30:50\",\n    \"eventAddress\": \"Via de' Nari, 14, 00186 Roma RM\",\n    \"eventDescription\": \"Lorum Ipsum Dolor\",\n    \"eventImageURL\": \"https://i.imgur.com/ditrT1U.png\",\n    \"eventType\": 2\n  },\n  {\n    \"eventName\": \"Cash Club\",\n    \"eventDateTime\": \"2022-10-10T07:30:50\",\n    \"eventAddress\": \"Via Agostino Bertani, 20 00186 Roma RM\",\n    \"eventDescription\": \"Lorup Ipsum My Penis\",\n    \"eventImageURL\": \"https://i.imgur.com/ditrT1U.png\",\n    \"eventType\": 1\n  }\n]";
        EventList = JsonConvert.DeserializeObject<List<Event>>(output);
    } **/
}

