@page "/createAccount"
@using Newtonsoft.Json;
@using System.Net.Http;
@using System;
@using System.Text;
@using Data;
@using Radzen;

@inject NavigationManager NavManager;

@inject Data.HttpRestService _httprestservice;

<div class=main >
    <h1>
        Create Account
    </h1>
    @*<RadzenTemplateForm Data=@("SimpleLogin") Action="http://www.google.com">
        <RadzenLogin AllowRegister="false" AllowResetPassword="false" Login=@(args => OnLogin(args, "Simple login")) />
    </RadzenTemplateForm>*@
    <div class="inputGroup">
        <p class=inputLabels>Username:</p>
        <RadzenTextBox Name="Username" @bind-Value=userName Style="border: 2px solid #066274" />
    </div>
    <div class="inputGroup">
        <p class=inputLabels>Password:</p>
        <RadzenTextBox Name="Password" @bind-Value=password Style="border: 2px solid #066274" />
    </div>
    <div class="inputGroup">
        <p class=inputLabels >Email:</p>
        <RadzenTextBox Name="Email" @bind-Value=email Style="border: 2px solid #066274" />
    </div>
    <RadzenButton Click=OnSignUp Text="Sign Up" Style="background-color: #066274; margin-top: 5%;" />
</div>

@code {
    string userName = "";
    string password = "";
    string email = "";
    //bool isAdmin = true;
    string error = "";
    /*
    public class Account
    {
        public string username { get; set; }
        public string password { get; set; }
        public string email { get; set; }
        public bool is_admin { get; set; }
        public string[] following_list { get; set; }
    }
    */
    /*
    public async Task OnLogin(LoginArgs args, string name)
    {
        Account acc = new Account();
        acc.username = args.Username;
        acc.password = args.Password;
        acc.email = email;
        //acc.is_admin = isAdmin;
        acc.following_list = Array.Empty<string>();
        Console.WriteLine($"Username: {args.Username} and password: {args.Password}");
        Task newAcc = CreateAccountAsync(acc, true);
        await newAcc;
    }
    */

    public async Task OnSignUp()
    {
        Account acc = new Account();
        acc.username = userName;
        acc.password = password;
        acc.email = email;
        acc.is_admin = false;
        acc.following_list = Array.Empty<string>();
        Console.WriteLine($"Username: {userName} and password: {password}");
        Task newAcc = CreateAccountAsync(acc, true);
        await newAcc;
    }

    public async Task CreateAccountAsync(Account acc, bool isNewItem = false)
    {
        Uri uri = new Uri(string.Format("https://308projectlogin.azurewebsites.net/api/account", string.Empty));

        try
        {
            //string json = JsonSerialize.Serialize<TodoItem>(item, _serializerOptions);
            string json = JsonConvert.SerializeObject(acc, Formatting.Indented);
            StringContent content = new StringContent(json, Encoding.UTF8, "application/json");

            HttpResponseMessage response = null;
            if (isNewItem)
                response = await _httprestservice._client.PostAsync(uri, content);
            else
                response = await _httprestservice._client.PutAsync(uri, content);

            if (response.IsSuccessStatusCode)
                Console.WriteLine(@"\tAccount successfully saved.");
        }
        catch (Exception ex)
        {
            Console.WriteLine(@"\tERROR {0}", ex.Message);
        }
    }

    //void OnRegister(string name)
    //{
    //    Console.WriteLine($"{name} -> Register");
    //}

    //void OnResetPassword(string value, string name)
    //{
    //    Console.WriteLine($"{name} -> ResetPassword for user: {value}");
    //}
}
}
