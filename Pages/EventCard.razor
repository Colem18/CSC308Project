@page "/eventcard"
@inject NavigationManager NavManager

@using Radzen;
@using eventsApp.Data;
@using Microsoft.Maui.Graphics;
@using eventsApp.Data;
@inject Account _account;
@inject Session _session;

<style>
    .flexColumn {
        display: flex;
        flex-direction: column;
        gap: 0.5em;
    }

    .textIcon {
        display: flex;
        flex-direction: row;
        margin-left: auto;
        margin-right: 0;
        justify-content: flex-end;
        gap: 5px;
    }

    img {
        max-width: 100%;
    }
</style>

<RadzenCard class="flexColumn">
    <div>
        <h1 style="text-align:left;">@eventName</h1>
        <p style="float:right;">
            <RadzenButton Click="FavoriteEvent" Icon="@star" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Medium" Class="rz-border-radius-10 rz-shadow-8" />
        </p>
    </div>
    <p style="text-align:left;">
        Presents
        <span style="float:right;">
            @eventDateTime
        </span>
    </p>
    <p>@eventAddress</p>
    <RadzenImage Path="@eventImageURL" Class="float-left mr-3" Style="width: 100%; border-radius: 2%;" />
    <div class="mt-3"> </div>
    <RadzenButton Click="newPage" Text="View Event" ButtonStyle="ButtonStyle.Primary" Style="display: block; width: 100%; border-radius: 2%;" />
</RadzenCard>

@code {
    public string star = "star_border";
    Account loggedIn;
    [Parameter]
    public string eventId { get; set; }
    [Parameter]
    public string eventName { get; set; }
    [Parameter]
    public String eventDateTime { get; set; }
    [Parameter]
    public string eventAddress { get; set; }
    [Parameter]
    public string eventDescription { get; set; }
    [Parameter]
    public string eventImageURL { get; set; }
    [Parameter]
    public int eventType { get; set; }

    private void newPage()
    {
        Console.WriteLine(_session.id);
        _session.id = eventId;
        NavManager.NavigateTo("/eventpage");
    }
    protected override async Task OnInitializedAsync()
    {
        loggedIn = _account;
        String[] following_list = loggedIn.following_list;
        if (loggedIn.id == null)
        {
            star = "star_border";
        }
        else if (following_list.Contains(@eventId))
        {
            star = "star";
        }
        else
        {
            star = "star_border";
        }

    }
    private void FavoriteEvent()
    {
        /**if (star == "star_border")
        {
            star = "star";
        }
        else
        {
            star = "star_border";
        } **/
    }
}
